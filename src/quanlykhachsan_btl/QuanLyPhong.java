/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package quanlykhachsan_btl;

import java.sql.*;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ADMIN
 */
public class QuanLyPhong extends javax.swing.JFrame {

    /**
     * Creates new form quanlyphong
     */
    Connection connection;

    public QuanLyPhong() {
        initComponents();
        GenericClass.centerOnScreen(this);
        try {
            connection = DBConnector.connect();
        } catch (SQLException ex) {
            Logger.getLogger(TrangChu.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jComboBox_hangPhong = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jTextField_maPhong = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jComboBox_loaiPhong = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jTextField_viTri = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jTextField_giaThue = new javax.swing.JTextField();
        jButton_them = new javax.swing.JButton();
        jButton_sua = new javax.swing.JButton();
        jButton_xoa = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jComboBox_tinhTrang = new javax.swing.JComboBox<>();
        jPanel1 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_dsPhong = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jTextField_timKiem = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Quản lý phòng");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Thông tin phòng"));

        jComboBox_hangPhong.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tiêu chuẩn", "Cao cấp", "Sang trọng", "Thượng hạng" }));

        jLabel2.setText("Mã phòng:");

        jLabel3.setText("Hạng phòng:");

        jLabel4.setText("Loại phòng:");

        jComboBox_loaiPhong.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SGL", "TWN", "DBL", "TRPL", " " }));

        jLabel5.setText("Vị trí:");

        jLabel6.setText("Giá thuê:");

        jTextField_giaThue.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField_giaThueKeyTyped(evt);
            }
        });

        jButton_them.setText("Thêm");
        jButton_them.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_themActionPerformed(evt);
            }
        });

        jButton_sua.setText("Sửa ");
        jButton_sua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_suaActionPerformed(evt);
            }
        });

        jButton_xoa.setText("Xóa");
        jButton_xoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_xoaActionPerformed(evt);
            }
        });

        jLabel11.setText("Tình trạng");

        jComboBox_tinhTrang.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Trống", "Đã đặt", "Đã thuê" }));
        jComboBox_tinhTrang.setEnabled(false);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(109, 109, 109)
                        .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(127, 127, 127))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBox_loaiPhong, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBox_hangPhong, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTextField_maPhong, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(97, 97, 97))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(123, 123, 123))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(124, 124, 124))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jComboBox_tinhTrang, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jTextField_viTri, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField_giaThue, javax.swing.GroupLayout.Alignment.LEADING))
                                .addGap(18, 18, 18)))))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton_sua, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton_xoa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton_them, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jTextField_viTri))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextField_maPhong)
                        .addComponent(jButton_them, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(84, 84, 84)
                        .addComponent(jButton_xoa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(jTextField_giaThue))
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jComboBox_hangPhong)
                                .addComponent(jButton_sua, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBox_loaiPhong))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addComponent(jComboBox_tinhTrang)))))
                .addGap(23, 23, 23))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Chú thích", javax.swing.border.TitledBorder.RIGHT, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        jLabel7.setText("SGL: 1 giường đơn");

        jLabel8.setText("TWN: 2 giường đơn");

        jLabel9.setText("DBL: 1 giường đôi");

        jLabel10.setText("TRPL: 1 giường đôi 1 giường đơn");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(76, 76, 76))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(70, 70, 70))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(79, 79, 79))
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(51, 51, 51))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Danh sách phòng", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        jTable_dsPhong.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã phòng", "Loại phòng", "Hạng phòng", "Vị trí", "Giá thuê", "Tình trạng"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable_dsPhong.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_dsPhongMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable_dsPhong);
        if (jTable_dsPhong.getColumnModel().getColumnCount() > 0) {
            jTable_dsPhong.getColumnModel().getColumn(0).setResizable(false);
            jTable_dsPhong.getColumnModel().getColumn(1).setResizable(false);
            jTable_dsPhong.getColumnModel().getColumn(2).setResizable(false);
            jTable_dsPhong.getColumnModel().getColumn(3).setResizable(false);
            jTable_dsPhong.getColumnModel().getColumn(4).setResizable(false);
            jTable_dsPhong.getColumnModel().getColumn(5).setResizable(false);
        }

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 269, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel1.setText("Tìm kiếm phòng:");

        jTextField_timKiem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField_timKiemKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jPanel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField_timKiem)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField_timKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void clear_input() {
        jTextField_maPhong.requestFocus();
        jTextField_maPhong.setText("");
        jComboBox_loaiPhong.setSelectedIndex(0);
        jComboBox_hangPhong.setSelectedIndex(0);
        jTextField_viTri.setText("");
        jTextField_giaThue.setText("");
        jComboBox_tinhTrang.setEnabled(false);
    }

    private String layMaKhachHang(Connection connection, String maPhong, String tinhTrang) {
        String maKhachHang = null;
        String query = "SELECT kh.MaKhachHang FROM khachhang kh JOIN phong p ON kh.MaPhong = p.MaPhong WHERE p.MaPhong = ? AND p.TinhTrang = ?";

        try (java.sql.PreparedStatement preparedStatement = connection.prepareStatement(query)) {
            // Thiết lập giá trị cho tham số trong câu lệnh SQL
            preparedStatement.setString(1, maPhong);
            preparedStatement.setString(2, tinhTrang);

            // Thực hiện truy vấn
            try (ResultSet resultSet = preparedStatement.executeQuery()) {
                if (resultSet.next()) {
                    maKhachHang = resultSet.getString("MaKhachHang");
                }
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
        return maKhachHang;
    }

    @SuppressWarnings("deprecation")
    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
        this.dispose();
        TrangChu trangChu = new TrangChu();
        trangChu.show();
    }//GEN-LAST:event_formWindowClosed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // TODO add your handling code here:
        GenericClass.loadData(connection, GenericClass.selectPhong, jTable_dsPhong);
    }//GEN-LAST:event_formWindowActivated

    private void jTextField_giaThueKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_giaThueKeyTyped
        // TODO add your handling code here:
        GenericClass.numbersOnly(evt);
    }//GEN-LAST:event_jTextField_giaThueKeyTyped

    private void jButton_themActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_themActionPerformed
        // TODO add your handling code here:
        try {
            // Lấy dữ liệu từ các component
            String maPhong = jTextField_maPhong.getText().toUpperCase();
            String loaiPhong = jComboBox_loaiPhong.getSelectedItem().toString();
            String hangPhong = jComboBox_hangPhong.getSelectedItem().toString();
            String viTri = jTextField_viTri.getText();
            String giaThue = jTextField_giaThue.getText();
            String tinhTrang = "Trống"; // Giá trị mặc định

            // Kiểm tra nếu một trong các trường là trống
            if (maPhong.isEmpty() || loaiPhong.isEmpty() || hangPhong.isEmpty() || viTri.isEmpty() || giaThue.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Vui lòng điền đầy đủ thông tin.", "Thông báo", JOptionPane.WARNING_MESSAGE);
                return;
            } else {
                String query = "INSERT INTO phong(MaPhong, LoaiPhong, HangPhong, ViTri, GiaThue, TinhTrang) VALUES (?, ?, ?, ?, ?, ?)";
                try (java.sql.PreparedStatement preparedStatement = connection.prepareStatement(query)) {
                    preparedStatement.setString(1, maPhong);
                    preparedStatement.setString(2, loaiPhong);
                    preparedStatement.setString(3, hangPhong);
                    preparedStatement.setString(4, viTri);
                    preparedStatement.setString(5, giaThue);
                    preparedStatement.setString(6, tinhTrang);

                    // Thực hiện câu lệnh SQL
                    preparedStatement.executeUpdate();
                }
                clear_input();
                JOptionPane.showMessageDialog(this, "Thêm phòng thành công.", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (Exception ex) {
            Logger.getLogger(QuanLyPhong.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Lỗi khi thêm phòng.", "Thông báo", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton_themActionPerformed

    private void jButton_suaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_suaActionPerformed
        // TODO add your handling code here:
        int[] selectedRows = jTable_dsPhong.getSelectedRows();
        if (selectedRows.length == 1) {
            try {
                // Lấy dữ liệu từ các component
                String maPhong = jTextField_maPhong.getText();
                String loaiPhong = jComboBox_loaiPhong.getSelectedItem().toString();
                String hangPhong = jComboBox_hangPhong.getSelectedItem().toString();
                String viTri = jTextField_viTri.getText();
                String giaThue = jTextField_giaThue.getText();
                String tinhTrang = jComboBox_tinhTrang.getSelectedItem().toString();
                String maKhachHang = layMaKhachHang(connection, maPhong, tinhTrang);
                // Kiểm tra nếu một trong các trường là trống
                if (maPhong.isEmpty() || loaiPhong.isEmpty() || hangPhong.isEmpty() || viTri.isEmpty() || giaThue.isEmpty()) {
                    JOptionPane.showMessageDialog(this, "Vui lòng điền đầy đủ thông tin.", "Thông báo", JOptionPane.WARNING_MESSAGE);
                    return;
                }

                if (!jComboBox_tinhTrang.getSelectedItem().toString().equalsIgnoreCase("Đã thuê")) {
                    GenericClass.updateTinhTrangPhong(connection, maPhong, jComboBox_tinhTrang.getSelectedItem().toString());
                    GenericClass.updateCSDL(connection, "DELETE FROM phieuden WHERE MaPhong = ?", maPhong);
                    try (java.sql.PreparedStatement preparedStatement = connection.prepareStatement("DELETE FROM khachhang WHERE MaPhong IN (SELECT MaPhong FROM phong WHERE TinhTrang = 'Trống')")) {
                        preparedStatement.executeUpdate();
                        GenericClass.loadData(connection, GenericClass.selectPhong, jTable_dsPhong);
                    } catch (SQLException ex) {
                        Logger.getLogger(QuanLyKhachHang.class.getName()).log(Level.SEVERE, null, ex);
                    }
                } else if (jComboBox_tinhTrang.getSelectedItem().toString().equalsIgnoreCase("Đã đặt")) {
                    String query = "UPDATE phong SET LoaiPhong = ?, HangPhong = ?, ViTri = ?, GiaThue = ?, TinhTrang = ? WHERE MaPhong = ?";
                    try (java.sql.PreparedStatement preparedStatement = connection.prepareStatement(query)) {
                        preparedStatement.setString(1, loaiPhong);
                        preparedStatement.setString(2, hangPhong);
                        preparedStatement.setString(3, viTri);
                        preparedStatement.setString(4, giaThue);
                        preparedStatement.setString(5, tinhTrang);
                        preparedStatement.setString(6, maPhong);
                        if (preparedStatement.executeUpdate() > 0) {
                            GenericClass.loadData(connection, GenericClass.selectPhong, jTable_dsPhong);
                            jTextField_maPhong.setEditable(true);
                            clear_input();
                            GenericClass.updateTinhTrangPhong(connection, maPhong, jComboBox_tinhTrang.getSelectedItem().toString());
                            JOptionPane.showMessageDialog(this, "Cập nhật phòng thành công.", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                        } else {
                            JOptionPane.showMessageDialog(this, "Cập nhật phòng thất bại.", "Lỗi", JOptionPane.ERROR_MESSAGE);
                        }
                    }
                } else if (jComboBox_tinhTrang.getSelectedItem().toString().equalsIgnoreCase("Trống")) {
                    GenericClass.loadData(connection, GenericClass.selectPhong, jTable_dsPhong);
                    GenericClass.updateCSDL(connection, "DELETE FROM khachhang WHERE MaKhachHang = ?", maKhachHang);
                }
            } catch (Exception ex) {
                Logger.getLogger(QuanLyPhong.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this, "Lỗi khi cập nhật phòng: " + ex.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Không thể cập nhật đồng thời " + selectedRows.length + " phòng", "Lỗi", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton_suaActionPerformed

    private void jButton_xoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_xoaActionPerformed
        // TODO add your handling code here:
        int[] selectedRows = jTable_dsPhong.getSelectedRows();

        if (selectedRows.length > 0) {
            int option = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn xóa " + selectedRows.length + " phòng đã chọn?", "Xác nhận xóa", JOptionPane.YES_NO_OPTION);
            if (option == JOptionPane.YES_OPTION) {
                try {
                    // Duyệt qua danh sách các dòng đã chọn
                    for (int i = selectedRows.length - 1; i >= 0; i--) {
                        // Lấy giá trị của cột chứa khóa chính (Mã phòng)
                        String maPhong = jTable_dsPhong.getValueAt(selectedRows[i], 0).toString();

                        // Thực hiện xóa trong cơ sở dữ liệu
                        String deleteQuery = "DELETE FROM phong WHERE MaPhong = ?";
                        try (java.sql.PreparedStatement preparedStatement = connection.prepareStatement(deleteQuery)) {
                            preparedStatement.setString(1, maPhong);

                            // Thực hiện câu lệnh SQL
                            preparedStatement.executeUpdate();
                        }

                        // Xóa dòng tương ứng trong DefaultTableModel
                        DefaultTableModel model = (DefaultTableModel) jTable_dsPhong.getModel();
                        model.removeRow(selectedRows[i]);
                    }

                    JOptionPane.showMessageDialog(this, "Đã xóa " + selectedRows.length + " phòng.", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                } catch (SQLException ex) {
                    Logger.getLogger(QuanLyPhong.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(this, "Lỗi khi xóa phòng: " + ex.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn ít nhất một dòng để xóa.", "Thông báo", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jButton_xoaActionPerformed

    private void jTable_dsPhongMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_dsPhongMouseClicked
        // TODO add your handling code here:
        int selectedRow = jTable_dsPhong.getSelectedRow();

        // Lấy dữ liệu từ bảng và gán cho các component
        jTextField_maPhong.setText(jTable_dsPhong.getValueAt(selectedRow, 0).toString());
        jComboBox_loaiPhong.setSelectedItem(jTable_dsPhong.getValueAt(selectedRow, 1).toString());
        jComboBox_hangPhong.setSelectedItem(jTable_dsPhong.getValueAt(selectedRow, 2).toString());
        jTextField_viTri.setText(jTable_dsPhong.getValueAt(selectedRow, 3).toString());
        jTextField_giaThue.setText(jTable_dsPhong.getValueAt(selectedRow, 4).toString());
        jComboBox_tinhTrang.setSelectedItem(jTable_dsPhong.getValueAt(selectedRow, 5).toString());
        jTextField_maPhong.setEditable(false);
        jComboBox_tinhTrang.setEnabled(true);
    }//GEN-LAST:event_jTable_dsPhongMouseClicked

    private void jTextField_timKiemKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_timKiemKeyReleased
        // TODO add your handling code here:
        String query = GenericClass.selectPhong + " WHERE TinhTrang LIKE '%" + jTextField_timKiem.getText() + "%' OR MaPhong LIKE '%" + jTextField_timKiem.getText() + "%'";
        GenericClass.loadData(connection, query, jTable_dsPhong);
    }//GEN-LAST:event_jTextField_timKiemKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QuanLyPhong.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QuanLyPhong.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QuanLyPhong.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QuanLyPhong.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QuanLyPhong().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_sua;
    private javax.swing.JButton jButton_them;
    private javax.swing.JButton jButton_xoa;
    private javax.swing.JComboBox<String> jComboBox_hangPhong;
    private javax.swing.JComboBox<String> jComboBox_loaiPhong;
    private javax.swing.JComboBox<String> jComboBox_tinhTrang;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable_dsPhong;
    private javax.swing.JTextField jTextField_giaThue;
    private javax.swing.JTextField jTextField_maPhong;
    private javax.swing.JTextField jTextField_timKiem;
    private javax.swing.JTextField jTextField_viTri;
    // End of variables declaration//GEN-END:variables
}
